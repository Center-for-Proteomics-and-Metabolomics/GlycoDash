% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fct_repeatability.R
\name{visualize_repeatability_mean_bars}
\alias{visualize_repeatability_mean_bars}
\title{Create a plot showing the repeatability for all plates together}
\usage{
visualize_repeatability_mean_bars(
  data,
  selected_sample_id,
  selected_group = NULL
)
}
\arguments{
\item{data}{A dataframe with the curated (and normalized) data.}

\item{selected_sample_id}{A character string indicating what sample type
should be shown in the plot.}

\item{selected_group}{A character string indicating if the repeatability of
the total or of the specific samples should be shown. Default is NULL.}
}
\value{
A ggplot object.
}
\description{
This function creates a bar plot with the relative abundance in percent on
the y-axis and the analytes on the x-axis. On top of the bars points are
shown that correspond to the relative standard deviation (RSD). The plot is
faceted by cluster. Error bars show the standard deviations.
}
\examples{
# First spectra curation has to be performed:
data("example_data")

example_data <- define_clusters(data = example_data,
                                cluster_keywords = "IgGI")

checked_data <- check_analyte_quality_criteria(my_data = example_data,
                                               min_ppm_deviation = -20,
                                               max_ppm_deviation = 20,
                                               max_ipq = 0.2,
                                               min_sn = 9,
                                               criteria_to_consider = c("Mass accuracy",
                                                                        "S/N",
                                                                        "IPQ"))

summarized_checks <- summarize_spectra_checks(checked_data = checked_data)

cut_offs_total <- calculate_cut_offs(summarized_checks = summarized_checks,
                                     control_sample_types = "PBS",
                                     exclude_sample_types = NULL,
                                     group_keyword = "Total",
                                     percentile = 97,
                                     use_mean_SD = FALSE,
                                     SD_factor = NULL,
                                     uncalibrated_as_NA = TRUE)

cut_offs_specific <- calculate_cut_offs(summarized_checks = summarized_checks,
                                        control_sample_types = "PBS",
                                        exclude_sample_types = NULL,
                                        group_keyword = "Spike",
                                        percentile = 97,
                                        use_mean_SD = FALSE,
                                        SD_factor = NULL,
                                        uncalibrated_as_NA = TRUE)

cut_offs <- dplyr::full_join(cut_offs_total,
                             cut_offs_specific)

curated_spectra <- curate_spectra(checked_data = checked_data,
                                  summarized_checks = summarized_checks,
                                  cut_offs = cut_offs)

passing_spectra <- kick_out_spectra(curated_spectra = curated_spectra)

for_analyte_curation <- remove_unneeded_columns(passing_spectra = passing_spectra)

# Then analyte curation is performed:
without_samples_to_ignore <- throw_out_samples(
   passing_spectra = for_analyte_curation,
   samples_to_ignore = c("PBS", "Visucon", "IVIGg", "Total")
)

checked_analytes <- check_analyte_quality_criteria(my_data = without_samples_to_ignore,
                                                   min_ppm_deviation = -20,
                                                   max_ppm_deviation = 20,
                                                   max_ipq = 0.2,
                                                   min_sn = 9,
                                                   criteria_to_consider = c("Mass accuracy",
                                                                            "S/N",
                                                                            "IPQ"))

curated_analytes <- curate_analytes(checked_analytes = checked_analytes,
                                    cut_off_percentage = 25)

analyte_curated_data <- dplyr::full_join(curated_analytes,
                                         for_analyte_curation) \%>\%
   dplyr::filter(has_passed_analyte_curation) \%>\%
   dplyr::select(-c(has_passed_analyte_curation, passing_percentage))

# Then we calculate the total intensities for each analyte:
total_intensities <- calculate_total_intensity(analyte_curated_data)

# And then we can perform total area normalization:
normalized_data <- normalize_data(total_intensities)

visualize_repeatability_mean_bars(data = normalized_data,
                                  selected_group = "Spike",
                                  selected_sample_id = "pool")
}
