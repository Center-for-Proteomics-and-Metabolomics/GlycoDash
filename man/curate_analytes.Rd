% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fct_analyte_curation.R
\name{curate_analytes}
\alias{curate_analytes}
\title{Perform analyte curation}
\usage{
curate_analytes(checked_analytes, cut_off_percentage)
}
\arguments{
\item{checked_analytes}{The result of the
\code{\link{check_analyte_quality_criteria}} function.}

\item{cut_off_percentage}{The minimum percentage of spectra in which an
analyte needs to fulfill the quality criteria in order for that analyte to
pass curation.}
}
\value{
A dataframe with one row for each combination of analyte and charge
  per cluster, a column named \code{passing_percentage} with the percentage
  of spectra that pass the analyte quality criteria for that analyte and a
  logical column named \code{passed_curation} that is \code{TRUE} for
  analytes with a \code{passing_percentage} above the
  \code{cut_off_percentage} and \code{FALSE} for analytes with a
  \code{passing_percentage} under or equal to the \code{cut_off_percentage}.
}
\description{
Curate analytes based on the percentage of spectra in which the analyte
passes the quality criteria. Before this function is used, the function
\code{\link{check_analyte_quality_criteria}} should be used to check the
analyte quality criteria for each analyte in each sample. Analyte curation should not be
based on spectra for which you don't expect any analytes to pass, or for
which you expect all analytes to pass. The arguments
\code{sample_types_to_ignore} and \code{group_to_ignore} should be used to
indicate which spectra should not be used as basis for analyte curation. This
function should be used only after spectra curation has been performed with
\code{\link{curate_spectra}} and after the spectra that did not pass spectra
curation have been filtered out (see example below).
}
\examples{
data("example_data")
example_data <- curate_spectra(data = example_data,
                            min_ppm_deviation = -20,
                            max_ppm_deviation = 20,
                            max_ipq = 0.2,
                            min_sn = 9,
                            clusters_regex = "IgGI1",
                            cut_off_basis = c("Spike PBS", "Total PBS"))

curated_spectra <- example_data$curated_data \%>\%
   dplyr::filter(has_passed_spectra_curation == TRUE) \%>\%
   dplyr::select(-has_passed_spectra_curation)

curate_analytes(data = curated_spectra,
                group_to_ignore = "Total",
                sample_types_to_ignore = c("Visucon",
                                           "PBS"),
                cut_off_percentage = 25)
                
}
