% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fct_normalization.R
\name{normalize_data}
\alias{normalize_data}
\title{Perform total area normalization}
\usage{
normalize_data(data)
}
\arguments{
\item{data}{The dataframe resulting from the
\code{\link{calculate_total_intensity}} function.}
}
\value{
The dataframe given as the \code{data} argument, but with the column
  "relative_abundance" instead of "total_absolute_intensity".
}
\description{
This function performs total area normalization per cluster for each
spectrum. First, the sum of the total absolute intensities is calculated per
cluster in each spectrum. Then the total absolute intensity for each analyte
within that cluster and spectrum is divided by that sum intensity. This
yields the relative abundance of the analyte in that spectrum.
}
\examples{
data("example_data")

# First spectra curation is performed:
long_data <- curate_spectra(data = long_data,
                            min_ppm_deviation = -20,
                            max_ppm_deviation = 20,
                            max_ipq = 0.2,
                            min_sn = 9,
                            clusters_regex = "IgGI1",
                            group_to_filter = "Spike",
                            sample_type_to_filter = "CN")

# Only the spectra that passed curation are kept:
curated_spectra <- long_data \%>\%
   dplyr::filter(passed_curation == TRUE)

# Then analyte curation is performed:
curate_analytes(data = curated_spectra,
                group_to_ignore = "Total",
                sample_types_to_ignore = c("pool", 
                                           "IVIGg", 
                                           "CN", 
                                           "Visucon", 
                                           "PBS"),
                cut_off_percentage = 25)

# Only the analytes that passed curation are kept:
passing_analytes <- curated_analytes \%>\% 
   dplyr::filter(passed_curation == TRUE) \%>\% 
   dplyr::select(-passed_curation)
analyte_curated_data <- dplyr::left_join(passing_analytes, curated_spectra)

# Then the total absolute intensities are calculated:
final_data <- calculate_total_intensity(data = analyte_curated_data)

# Finally, total area normalization is performed:
normalized_data <- normalize_data(data = final_data)

}
